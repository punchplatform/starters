#!/usr/bin/env bash -ec -o pipefail

.PHONY: prerequisites

prerequisites:
	@mkdir -p ${OUTPUT_DIR}

.PHONY: venv

venv:
	@if [ ! -e "${ACTIVATE_VENV}/bin/activate" ] ; then python3 -m venv ${VENV} ; fi
	@$(PIP) install -U setuptools'<50' wheel pip
	@$(PIP) install -U poetry pex
	@$(POETRY) run pip install -U pip setuptools'<50' wheel
	@$(POETRY) install

.PHONY: clean-package

clean-package:
	rm -rf dist
	rm -rf target

.PHONY: clean-pyc

clean-pyc:
	-find . -name '*.pyc' -exec rm -f {} +
	-find . -name '*.pyo' -exec rm -f {} +
	-find . -name '*~' -exec rm -f {} +
	-find . -name '__pycache__' -exec rm -fr {} +

.PHONY: clean-test

clean-test:
	rm -fr .tox/
	rm -fr .coverage
	rm -fr htmlcov/

.PHONY: docker-clean

docker-clean:
	@docker rm -f "${CONTAINER_NAME}" 2>/dev/null || true

.PHONY: package

package: prerequisites venv 
	@$(POETRY) build
	@$(PEX) . -o ${OUTPUT_PEX_ARCHIVE}

.PHONY: help

help:
	@awk 'BEGIN {FS = ":.*##"; printf "\033[36m\033[0m\n"} /^[0-9a-zA-Z_-]+:.*?##/ { printf "  \033[36m%-28s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)